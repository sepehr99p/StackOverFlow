definitions:
  models.Answer:
    properties:
      answer_id:
        type: integer
      date:
        type: integer
      description:
        type: string
      is_correct_answer:
        type: boolean
      question_id:
        description: Foreign key to Question
        type: integer
      user_id:
        type: integer
      votes:
        type: integer
    type: object
  models.Comment:
    properties:
      comment_id:
        type: integer
      date:
        type: integer
      description:
        type: string
      parent_id:
        type: integer
      parent_type:
        description: '"question_handler" or "answer_handler"'
        type: string
      user_id:
        type: integer
      votes:
        type: integer
    type: object
  models.Question:
    properties:
      date:
        type: integer
      description:
        type: string
      question_id:
        type: integer
      tags:
        items:
          $ref: '#/definitions/models.Tag'
        type: array
      user_id:
        description: Foreign key to User
        type: integer
      votes:
        type: integer
    type: object
  models.Report:
    properties:
      description:
        type: string
      report_id:
        type: string
      report_type:
        type: string
    type: object
  models.Tag:
    properties:
      name:
        type: string
      questions:
        items:
          $ref: '#/definitions/models.Question'
        type: array
      tag_id:
        type: integer
    type: object
  models.User:
    properties:
      is_admin:
        type: boolean
      password:
        type: string
      reputation:
        type: integer
      user_id:
        type: integer
      user_name:
        type: string
    type: object
  models.UserRegister:
    properties:
      password:
        type: string
      phone_number:
        type: string
    type: object
info:
  contact: {}
paths:
  /admin/user/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: Tag object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      tags:
      - user
  /admin/user/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Tag object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      tags:
      - user
  /api/answer/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Answer object
        in: body
        name: answer
        required: true
        schema:
          $ref: '#/definitions/models.Answer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Answer'
      tags:
      - answer
  /api/answer/correctAnswer/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Answer'
      tags:
      - answer
  /api/answer/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Answer'
      tags:
      - answer
  /api/answer/voteDown/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Answer'
      tags:
      - answer
  /api/answer/voteUp/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Answer'
      tags:
      - answer
  /api/comment/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment object
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comment'
      tags:
      - comment
  /api/comment/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Comment object
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comment'
      tags:
      - comment
  /api/questions/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Question'
      tags:
      - questions
  /api/questions/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Question Data
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/models.Question'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Question'
      tags:
      - questions
  /api/questions/all:
    get:
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Question'
      tags:
      - questions
  /api/questions/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Question object
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/models.Question'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Question'
      tags:
      - questions
  /api/questions/my:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Question'
      tags:
      - questions
  /api/questions/voteDown/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Question'
      tags:
      - questions
  /api/questions/voteUp/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Question'
      tags:
      - questions
  /api/report:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Report object
        in: body
        name: report
        required: true
        schema:
          $ref: '#/definitions/models.Report'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Report'
      tags:
      - report
  /api/tag/add:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Tag object
        in: body
        name: tag
        required: true
        schema:
          $ref: '#/definitions/models.Tag'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Tag'
      tags:
      - tag
  /api/tag/questions/all:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Tag'
      tags:
      - tag
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: User object
        in: body
        name: answer_handler
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      tags:
      - auth
  /auth/protected:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: User object
        in: body
        name: answer_handler
        required: true
        schema:
          $ref: '#/definitions/models.UserRegister'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
      tags:
      - auth
swagger: "2.0"
